{"version":3,"file":"web_tiny.min.mjs","sources":["../tiny/web.mjs","../../code/demo/web_tiny.jsy"],"sourcesContent":["function encode_varint(n, a=[]) {\n  do {\n    const ni = n & 0x7f;\n    n >>>= 7;\n    a.push(ni | (0===n ? 0 : 0x80)); }\n  while (n > 0)\n  return a}\n\n\nfunction decode_varint(u8, vi=0, vi_tuple=[]) {\n  // unrolled for a max of 4 chains\n  let n = (u8[vi] & 0x7f) <<  0;\n  if (0x80 & u8[vi++]) {\n    n |= (u8[vi] & 0x7f) <<  7;\n    if (0x80 & u8[vi++]) {\n      n |= (u8[vi] & 0x7f) << 14;\n      if (0x80 & u8[vi++]) {\n        n |= (u8[vi] & 0x7f) << 21;} } }\n\n  vi_tuple[0] = n;\n  vi_tuple[1] = vi;\n  return vi_tuple}\n\nconst [mqtt_cmd_by_type, mqtt_type_entries] = ((() => {\n\n  const entries =[\n    [0x0, 'reserved']\n  , [0x1, 'connect']\n  , [0x2, 'connack']\n  , [0x3, 'publish']\n  , [0x4, 'puback']\n  , [0x5, 'pubrec']\n  , [0x6, 'pubrel']\n  , [0x7, 'pubcomp']\n  , [0x8, 'subscribe']\n  , [0x9, 'suback']\n  , [0xa, 'unsubscribe']\n  , [0xb, 'unsuback']\n  , [0xc, 'pingreq']\n  , [0xd, 'pingresp']\n  , [0xe, 'disconnect']\n  , [0xf, 'auth'] ];\n\n  const type_map = new Map();\n  for (const [id, type] of entries) {\n    const cmd = id << 4;\n    type_map.set(cmd, {type, cmd, id});}\n\n  return [\n    type_map.get.bind(type_map)\n  , Array.from(type_map.values()) ] })());\n\nfunction _mqtt_raw_pkt_decode_v(u8_ref, _pkt_ctx_) {\n  const [u8] = u8_ref;\n  const [len_body, len_vh] = decode_varint(u8, 1);\n\n  const len_pkt = len_body + len_vh;\n  if (u8.byteLength >= len_pkt) {\n    const b0 = u8[0], cmd = b0 & 0xf0;\n    u8_ref[0] = u8.subarray(len_pkt);\n    return {__proto__: _pkt_ctx_\n    , b0, cmd, id: b0>>>4, hdr: b0 & 0x0f\n    , type_obj: mqtt_cmd_by_type(cmd)\n    , u8_body: 0 === len_body ? null\n        : u8.subarray(len_vh, len_pkt)} } }\n\n\nfunction _mqtt_raw_pkt_dispatch(u8_pkt_dispatch) {\n  return (( _pkt_ctx_={} ) => {\n    const l = [new Uint8Array(0)]; // reuse array to prevent garbage collection churn on ephemeral ones\n    _pkt_ctx_._base_ = _pkt_ctx_;\n\n    return (( u8_buf ) => {\n      l[0] = 0 === l[0].byteLength\n        ? u8_buf : _u8_join(l[0], u8_buf);\n\n      const res = [];\n      while (true) {\n        const u8_pkt = _mqtt_raw_pkt_decode_v(l, _pkt_ctx_);\n        if (undefined !== u8_pkt) {\n          res.push(u8_pkt_dispatch(u8_pkt)); }\n        else return res} }) }) }\n\n\nfunction _u8_join(a, b) {\n  const alen = a.byteLength;\n  const r = new Uint8Array(alen + b.byteLength);\n  r.set(a, 0);\n  r.set(b, alen);\n  return r}\n\nconst _mqtt_pkt_id_dispatch = disp_parser =>\n  _mqtt_raw_pkt_dispatch (( pkt ) => {\n    const fn_disp = disp_parser[pkt.type_obj.id];\n    return undefined !== fn_disp\n      ? fn_disp.call(disp_parser, pkt)\n      : disp_parser[0](pkt)});\n\n\nconst _mqtt_bind_encode = enc_by_type =>\n  (( mqtt_level ) => {\n    mqtt_level = +mqtt_level || mqtt_level.mqtt_level;\n    return (( type, pkt ) =>\n      enc_by_type[type](mqtt_level, pkt) ) });\n\n\nfunction _bind_mqtt_session(mqtt_level, mqtt_decode_session, mqtt_encode_session) {\n  mqtt_level = mqtt_level || 4;\n  return (( _pkt_ctx_={mqtt_level} ) =>[\n    mqtt_decode_session(_pkt_ctx_)\n  , mqtt_encode_session(_pkt_ctx_)] ) }\n\nconst [mqtt_props_by_id, mqtt_props_entries] = ((() => {\n  const entries =[\n    [0x01, 'u8',   'payload_format_indicator']\n  , [0x02, 'u32',  'message_expiry_interval', ]\n  , [0x03, 'utf8', 'content_type', ]\n  , [0x08, 'utf8', 'response_topic', ]\n  , [0x09, 'bin',  'correlation_data', ]\n  , [0x0B, 'vint', 'subscription_identifier', ]\n  , [0x11, 'u32',  'session_expiry_interval', ]\n  , [0x12, 'utf8', 'assigned_client_identifier', ]\n  , [0x13, 'u16',  'server_keep_alive', ]\n  , [0x15, 'utf8', 'authentication_method', ]\n  , [0x16, 'bin',  'authentication_data', ]\n  , [0x17, 'u8',   'request_problem_information', ]\n  , [0x18, 'u32',  'will_delay_interval', ]\n  , [0x19, 'u8',   'request_response_information', ]\n  , [0x1A, 'utf8', 'response_information', ]\n  , [0x1C, 'utf8', 'server_reference', ]\n  , [0x1F, 'utf8', 'reason_string', ]\n  , [0x21, 'u16',  'receive_maximum', ]\n  , [0x22, 'u16',  'topic_alias_maximum', ]\n  , [0x23, 'u16',  'topic_alias', ]\n  , [0x24, 'u8',   'maximum_qo_s', ]\n  , [0x25, 'u8',   'retain_available', ]\n  , [0x26, 'pair', 'user_properties', true]\n  , [0x27, 'u32',  'maximum_packet_size', ]\n  , [0x28, 'u8',   'wildcard_subscription_available', ]\n  , [0x29, 'u8',   'subscription_identifiers_available', true]\n  , [0x2A, 'u8',   'shared_subscription_available', ] ];\n\n\n  const prop_map = new Map();\n  for (const [id, type, name, plural] of entries) {\n    const prop_obj = {id, type, name};\n    if (plural) {prop_obj.plural = plural;}\n    prop_map.set(prop_obj.id, prop_obj);\n    prop_map.set(prop_obj.name, prop_obj);}\n\n  return [\n    prop_map.get.bind(prop_map)\n  , Array.from(prop_map.values()) ] })());\n\nclass mqtt_type_reader {\n  constructor(buf, idx=0) {\n    this.buf = buf;\n    this.step = (width, r) =>(r = idx, idx += width, r); }\n\n  has_more() {\n    const {buf, step} = this;\n    return buf.byteLength > step(0)}\n\n  u8() {\n    const {buf, step} = this;\n    return buf[step(1)]}\n\n  u16() {\n    const {buf, step} = this;\n    const i = step(2);\n    return (buf[i]<<8) | buf[i+1]}\n\n  u32() {\n    const {buf, step} = this;\n    const i = step(4);\n    return (buf[i]<<24) | (buf[i+1]<<16) | (buf[i+2]<<8) | buf[i+3]}\n\n  vint() {\n    const {buf, step} = this;\n    const [n, vi] = decode_varint(buf, step(0));\n    step(vi);\n    return n}\n\n  bin() {\n    const {buf, step} = this;\n    const i = step(2);\n    const len = (buf[i]<<8) | buf[i+1];\n    const i0 = step(len);\n    return buf.subarray(i0, i0+len)}\n\n  utf8() {return new TextDecoder('utf-8').decode(this.bin())}\n  pair() {return [this.utf8(), this.utf8()]}\n\n  u8_flags(FlagsType) {\n    const {buf, step} = this;\n    return new FlagsType(buf[step(1)])}\n\n  u8_reason(fn_reason) {\n    const {buf, step} = this;\n    return fn_reason(buf[step(1)]) }\n\n  flush() {\n    const {buf, step} = this;\n    this.step = this.buf = null;\n    return buf.subarray(step(0))}\n\n  props() {\n    const {buf, step} = this;\n\n    const [len, vi] = decode_varint(buf, step(0));\n    const end_part = vi + len;\n    step(end_part);\n    if (0 === len) {\n      return null}\n\n    const prop_entries =[];\n    const rdr = mqtt_reader(\n      buf.subarray(vi, end_part));\n\n    while (rdr.has_more()) {\n      const {name, type} = mqtt_props_by_id(rdr.u8());\n      const value = rdr[type]();\n      prop_entries.push([name, value]); }\n\n    return prop_entries} }\n\n\n\nclass U8_Reason extends Number {\n  constructor(u8, reason) {\n    super(u8);\n    this.reason = reason;} }\n\nfunction bind_reason_lookup(reason_entries) {\n  const reason_map = new Map();\n  for (const [u8, reason] of reason_entries) {\n    reason_map.set(u8, new U8_Reason(u8, reason)); }\n\n  return reason_map.get.bind(reason_map)}\n\nclass _connack_flags_ extends Number {\n  get session_present() {return this & 0x01 !== 0} }\n\nconst _connack_reason_ = bind_reason_lookup([\n  // MQTT 3.1.1\n  [0x00, 'Success']\n, [0x01, 'Connection refused, unacceptable protocol version']\n, [0x02, 'Connection refused, identifier rejected']\n, [0x03, 'Connection refused, server unavailable']\n, [0x04, 'Connection refused, bad user name or password']\n, [0x05, 'Connection refused, not authorized']\n\n, // MQTT 5.0\n  [0x81, 'Malformed Packet']\n, [0x82, 'Protocol Error']\n, [0x83, 'Implementation specific error']\n, [0x84, 'Unsupported Protocol Version']\n, [0x85, 'Client Identifier not valid']\n, [0x86, 'Bad User Name or Password']\n, [0x87, 'Not authorized']\n, [0x88, 'Server unavailable']\n, [0x89, 'Server busy']\n, [0x8A, 'Banned']\n, [0x8C, 'Bad authentication method']\n, [0x90, 'Topic Name invalid']\n, [0x95, 'Packet too large']\n, [0x97, 'Quota exceeded']\n, [0x99, 'Payload format invalid']\n, [0x9A, 'Retain not supported']\n, [0x9B, 'QoS not supported']\n, [0x9C, 'Use another server']\n, [0x9D, 'Server moved']\n, [0x9F, 'Connection rate exceeded'] ]);\n\n\nfunction mqtt_decode_connack(pkt) {\n  const rdr = new mqtt_type_reader(pkt.u8_body, 0);\n\n  const flags = pkt.connect_flags =\n    rdr.u8_flags(_connack_flags_);\n\n  pkt.reason = rdr.u8_reason(_connack_reason_);\n  if (5 <= pkt.mqtt_level) {\n    pkt.props = rdr.props();}\n  return pkt}\n\nfunction mqtt_decode_publish(pkt) {\n  const {hdr} = pkt;\n  pkt.dup = Boolean(hdr & 0x8);\n  pkt.retain = Boolean(hdr & 0x1);\n  const qos = pkt.qos = (hdr>>1) & 0x3;\n\n  const rdr = new mqtt_type_reader(pkt.u8_body, 0);\n  pkt.topic = rdr.utf8();\n  if (0 !== qos) {\n    pkt.pkt_id = rdr.u16();}\n\n  if (5 <= pkt.mqtt_level) {\n    pkt.props = rdr.props();\n    pkt.payload = rdr.flush();}\n  else {\n    pkt.payload = rdr.flush();}\n\n  return pkt}\n\nconst _puback_reason_ = bind_reason_lookup([\n  [0x00, 'Success']\n\n, // MQTT 5.0\n  [0x10, 'No matching subscribers']\n, [0x80, 'Unspecified error']\n, [0x83, 'Implementation specific error']\n, [0x87, 'Not authorized']\n, [0x90, 'Topic Name invalid']\n, [0x91, 'Packet identifier in use']\n, [0x97, 'Quota exceeded']\n, [0x99, 'Payload format invalid'] ]);\n\nconst _pubxxx_reason_ = bind_reason_lookup([\n  [0x00, 'Success']\n, [0x92, 'Packet Identifier not found'] ]);\n\nfunction _mqtt_decode_suback(pkt, _ack_reason_) {\n  const rdr = new mqtt_type_reader(pkt.u8_body, 0);\n\n  pkt.pkt_id = rdr.u16();\n  if (5 <= pkt.mqtt_level) {\n    pkt.props = rdr.props();}\n\n  const answers = pkt.answers = [];\n  while (rdr.has_more()) {\n    answers.push(\n      rdr.u8_reason(_ack_reason_)); }\n\n  return pkt}\n\nconst _suback_reason_ = bind_reason_lookup([\n  // MQTT 3.1.1\n  [0x00, 'Granted QoS 0']\n, [0x01, 'Granted QoS 1']\n, [0x02, 'Granted QoS 2']\n\n, // MQTT 5.0\n  [0x80, 'Unspecified error']\n, [0x83, 'Implementation specific error']\n, [0x87, 'Not authorized']\n, [0x8F, 'Topic Filter invalid']\n, [0x91, 'Packet Identifier in use']\n, [0x97, 'Quota exceeded']\n, [0x9E, 'Shared Subscriptions not supported']\n, [0xA1, 'Subscription Identifiers not supported']\n, [0xA2, 'Wildcard Subscriptions not supported'] ]);\n\n\nfunction mqtt_decode_suback(pkt) {\n  return _mqtt_decode_suback(\n    pkt, _suback_reason_) }\n\nconst _unsuback_reason_ = bind_reason_lookup([\n  [0x00, 'Success']\n, [0x11, 'No subscription existed']\n, [0x80, 'Unspecified error']\n, [0x83, 'Implementation specific error']\n, [0x87, 'Not authorized']\n, [0x8F, 'Topic Filter invalid']\n, [0x91, 'Packet Identifier in use'] ]);\n\nconst _disconnect_reason_ = bind_reason_lookup([\n  // MQTT 5.0\n  [0x00, 'Normal disconnection']\n, [0x04, 'Disconnect with Will Message']\n, [0x80, 'Unspecified error']\n, [0x81, 'Malformed Packet']\n, [0x82, 'Protocol Error']\n, [0x83, 'Implementation specific error']\n, [0x87, 'Not authorized']\n, [0x89, 'Server busy']\n, [0x8B, 'Server shutting down']\n, [0x8D, 'Keep Alive timeout']\n, [0x8E, 'Session taken over']\n, [0x8F, 'Topic Filter invalid']\n, [0x90, 'Topic Name invalid']\n, [0x93, 'Receive Maximum exceeded']\n, [0x94, 'Topic Alias invalid']\n, [0x95, 'Packet too large']\n, [0x96, 'Message rate too high']\n, [0x97, 'Quota exceeded']\n, [0x98, 'Administrative action']\n, [0x99, 'Payload format invalid']\n, [0x9A, 'Retain not supported']\n, [0x9B, 'QoS not supported']\n, [0x9C, 'Use another server']\n, [0x9D, 'Server moved']\n, [0x9E, 'Shared Subscriptions not supported']\n, [0x9F, 'Connection rate exceeded']\n, [0xA0, 'Maximum connect time']\n, [0xA1, 'Subscription Identifiers not supported']\n, [0xA2, 'Wildcard Subscriptions not supported'] ]);\n\nconst _auth_reason_ = bind_reason_lookup([\n  // MQTT 5.0\n  [0x00, 'Success']\n, [0x18, 'Continue authentication']\n, [0x19, 'Re-authenticate'] ]);\n\nconst mqtt_decode_noop = pkt => pkt;\n\nfunction mqtt_pkt_writer_pool() {\n  const _pool_ = [];\n  return (() =>0 === _pool_.length\n      ? mqtt_pkt_writer(_pool_)\n      : _pool_.pop()) }\n\nfunction mqtt_pkt_writer(_pool_) {\n  let self, n=0, rope=[];\n  return self ={\n    push(u8) {\n      \n\n\n      rope.push(u8);\n      n += u8.length;}\n\n  , as_pkt(hdr) {\n      const pkt = _mqtt_pkt_rope(hdr, n, rope);\n      n=0; rope=[];\n      if (undefined !== _pool_) {\n        _pool_.push(self);}\n      return pkt} } }\n\nfunction _mqtt_pkt_rope(hdr, n, rope) {\n  const header = encode_varint(n, [hdr]);\n  let i = header.length;\n\n  const pkt = new Uint8Array(n + i);\n  pkt.set(header, 0);\n  for (const vec of rope) {\n    pkt.set(vec, i);\n    i += vec.length;}\n  return pkt}\n\nconst pack_utf8 = v => new TextEncoder('utf-8').encode(v);\nconst pack_u16 = v =>[(v>>>8) & 0xff, v & 0xff];\nconst pack_u32 = v =>[(v>>>24) & 0xff, (v>>>16) & 0xff, (v>>>8) & 0xff, v & 0xff];\n\nclass mqtt_type_writer {\n  constructor() {\n    Object.assign(this, this._pkt_writer()); }\n\n  u8(v) {this.push([v & 0xff]);}\n  u16(v) {this.push(pack_u16(v));}\n  u32(v) {this.push(pack_u32(v));}\n  vint(v) {this.push(encode_varint(v));}\n\n  _u16_bin(u8_buf) {\n    const {push} = this;\n    push(pack_u16(u8_buf.byteLength));\n    push(u8_buf); }\n\n  flush(buf) {\n    this.push(\n      'string' === typeof buf\n        ? pack_utf8(buf) : buf);\n\n    this.push = false;}\n\n  bin(u8_buf) {\n    if ('string' === typeof u8_buf) {\n      return this.utf8(u8_buf)}\n\n    if (u8_buf.length !== u8_buf.byteLength) {\n      u8_buf = new Uint8Array(u8_buf);}\n    this._u16_bin(u8_buf);}\n\n  utf8(v) {this._u16_bin(\n    new TextEncoder('utf-8').encode(v)); }\n\n  pair(k,v) {\n    this.utf8(k);\n    this.utf8(v);}\n\n  u8_flags(v, enc_flags) {\n    if (undefined !== v && isNaN(+v)) {\n      v = enc_flags(v, 0);}\n    v |= 0;\n    this.push([v]);\n    return v}\n\n  u8_reason(v) {this.push([v | 0]);}\n\n  props() {throw \"TODO\"} }\n\nmqtt_type_writer.prototype._pkt_writer = \n  mqtt_pkt_writer_pool();\n\nconst _c_mqtt_proto = new Uint8Array([\n  0, 4, 0x4d, 0x51, 0x54, 0x54]);\n\nfunction mqtt_encode_connect(mqtt_level, pkt) {\n  const wrt = new mqtt_type_writer();\n\n  wrt.push(_c_mqtt_proto);\n  wrt.u8(mqtt_level);\n  const flags = wrt.u8_flags(\n    pkt.connect_flags\n  , _enc_connect_flags);\n\n  wrt.u16(pkt.keep_alive);\n\n  if (5 <= mqtt_level) {\n    wrt.props(pkt.props);}\n\n\n  const {payload} = pkt;\n  wrt.utf8(payload.client_id);\n  if (flags & 0x04) {// .will_flag\n    if (5 <= mqtt_level) {\n      wrt.props(payload.will_properties); }\n\n    wrt.utf8(payload.will_topic);\n    wrt.bin(payload.will_payload); }\n\n  if (flags & 0x80) {// .username\n    wrt.utf8(payload.username); }\n\n  if (flags & 0x40) {// .password\n    wrt.bin(payload.password); }\n\n  return wrt.as_pkt(0x10)}\n\nconst _enc_connect_flags = flags => 0\n    |(flags.reserved ? 0x01 : 0)\n    |((flags.will_qos & 0x3) << 3)\n    |(flags.clean_start ? 0x02 : 0)\n    |(flags.will_flag ? 0x04 : 0)\n    |(flags.will_retain ? 0x20 : 0)\n    |(flags.password ? 0x40 : 0)\n    |(flags.username ? 0x80 : 0);\n\nfunction mqtt_encode_publish(mqtt_level, pkt) {\n  const qos = (pkt.qos & 0x3) << 1;\n  const wrt = new mqtt_type_writer();\n\n  wrt.utf8(pkt.topic);\n  if (0 !== qos) {\n    wrt.u16(pkt.pkt_id);}\n\n  if (5 <= mqtt_level) {\n    wrt.props(pkt.props);\n    wrt.flush(pkt.payload);}\n  else {\n    wrt.flush(pkt.payload);}\n\n  return wrt.as_pkt(\n    0x30 | qos | (pkt.dup ? 0x8 : 0) | (pkt.retain ? 0x1 : 0)) }\n\nfunction mqtt_encode_subscribe(mqtt_level, pkt) {\n  const wrt = new mqtt_type_writer();\n\n  wrt.u16(pkt.pkt_id);\n  if (5 <= pkt.mqtt_level) {\n    wrt.props(pkt.props);}\n\n  for (const each of pkt.topics) {\n    if ('string' === typeof each) {\n      wrt.utf8(each);\n      wrt.u8(0);}\n\n    else if (Array.isArray(each)) {\n      wrt.utf8(each[0]);\n      wrt.u8_flags(each[1], _enc_subscribe_flags);}\n\n    else {\n      wrt.utf8(each.topic);\n      wrt.u8_flags(each.opts, _enc_subscribe_flags);} }\n\n  return wrt.as_pkt(0x82)}\n\nconst _enc_subscribe_flags = opts => 0\n    |(opts.qos & 0x3)\n    |(opts.retain ? 0x4 : 0)\n    |((opts.retain_handling & 0x3) << 2  );\n\nfunction mqtt_encode_disconnect(mqtt_level, pkt) {\n  const wrt = new mqtt_type_writer();\n\n  if (5 <= mqtt_level) {\n    wrt.u8_reason(pkt.reason);\n    wrt.props(pkt.props); }\n\n  return wrt.as_pkt(0xe0)}\n\nconst ops_by_id = Array(17).fill(mqtt_decode_noop);\nops_by_id[0x2] = mqtt_decode_connack;\nops_by_id[0x3] = mqtt_decode_publish;\nops_by_id[0x9] = mqtt_decode_suback;\n\nconst mqtt_decode_session =\n  _mqtt_pkt_id_dispatch(\n    ops_by_id);\n\nconst mqtt_encode_session =\n  _mqtt_bind_encode({\n    connect: mqtt_encode_connect\n  , disconnect: mqtt_encode_disconnect\n  , publish: mqtt_encode_publish\n  , subscribe: mqtt_encode_subscribe});\n\nconst mqtt_session = _bind_mqtt_session(4,\n  mqtt_decode_session, mqtt_encode_session);\n\nclass MQTTClient {\n  constructor(target) {\n    this._conn_ = this._transport(this);\n    this._disp_ = this._dispatch(this, target);}\n\n  /* async _send(type, pkt) -- provided by _transport */\n  /* _on_mqtt(pkt_list, self) -- provided by _dispatch */\n\n  auth(pkt) {return this._disp_send('auth', pkt, 'auth')}\n  connect(pkt) {return this._disp_send('connect', pkt, 'connack')}\n\n  disconnect(pkt) {return this._send('disconnect', pkt)}\n  publish(pkt) {\n    return pkt.qos > 0 \n      ? this._disp_send('publish', pkt, pkt)\n      : this._send('publish', pkt)}\n\n  subscribe(pkt) {return this._disp_send('subscribe', pkt, pkt)}\n  unsubscribe(pkt) {return this._disp_send('unsubscribe', pkt, pkt)}\n\n  async _disp_send(type, pkt, key) {\n    const res = this._disp_.future(key);\n    await this._send(type, pkt);\n    return res}\n\n  static with_api(api) {\n    class MQTTClient extends this {}\n    Object.assign(MQTTClient.prototype, api);\n    return MQTTClient} }\n\n\nObject.assign(MQTTClient.prototype,{\n  _transport: _mqtt_client_transport\n, _dispatch: _mqtt_client_dispatch} );\n\n\nfunction _mqtt_client_transport(client) {\n  const q = []; // tiny version of deferred\n  q.then = y => void q.push(y);\n  q.notify = v => {for (const fn of q.splice(0,q.length)) {fn(v);} };\n\n  const send0 = (async ( type, pkt ) => {\n    (await q)(type, pkt);});\n\n  client._send = send0;\n  return {\n    is_live: (() =>send0 !== client._send)\n  , reset() {client._send = send0;}\n\n  , set(mqtt_session, send_u8_pkt) {\n      const [mqtt_decode, mqtt_encode] =\n        mqtt_session();\n\n      const on_mqtt_chunk = u8_buf =>\n        client._on_mqtt(\n          mqtt_decode(u8_buf)\n        , client);\n\n      const send_pkt = (async ( type, pkt ) => {\n        send_u8_pkt(\n          mqtt_encode(type, pkt)); });\n\n\n      client._send = send_pkt;\n      q.notify(send_pkt);\n      return on_mqtt_chunk} } }\n\n\n\nconst _mqtt_client_cmdid_dispatch ={\n  get on_mqtt() {\n    const {cmdids, rotate:{td,n} } = this;\n    let ts = td + Date.now();\n    return (( pkt_list ) => {\n      for (const pkt of pkt_list) {\n        cmdids[pkt.id](this, pkt); }\n\n      if (Date.now() > ts) {\n        this.rotate_belt(n);\n        ts = td + Date.now();} }) }\n\n\n, resolve(key, pkt) {\n    for (const map of this.hashbelt) {\n      const entry = map.get(key);\n      if (undefined !== entry) {\n        map.delete(key);\n        entry[0](pkt);\n        return true} }\n    return false}\n\n, rotate:{n: 3, td: 1000 }// 3 * 1s buckets\n, rotate_belt(n) {\n    const {hashbelt} = this;\n    hashbelt.unshift(new Map());\n    for (const old of hashbelt.splice(n)) {\n      for (const entry of old.values()) {\n        entry[1]('expired');} } }\n\n, cmdids: ((() => {\n    return [\n      by_evt   // 0x0 reserved\n    , by_evt   // 0x1 connect\n    , by_type  // 0x2 connack\n    , by_evt   // 0x3 publish\n    , by_id    // 0x4 puback\n    , by_id    // 0x5 pubrec\n    , by_id    // 0x6 pubrel\n    , by_id    // 0x7 pubcomp\n    , by_evt   // 0x8 subscribe\n    , by_id    // 0x9 suback\n    , by_evt   // 0xa unsubscribe\n    , by_id    // 0xb unsuback\n    , by_evt   // 0xc pingreq\n    , by_evt   // 0xd pingresp\n    , by_evt   // 0xe disconnect\n    , by_type  ]// 0xf auth\n\n\n    function by_id(disp, pkt) {\n      disp.resolve(pkt.pkt_id, pkt); }\n\n    function by_type(disp, pkt) {\n      disp.resolve(pkt.type_obj.type, pkt);\n      by_evt(disp, pkt);}\n\n    async function by_evt({target}, pkt) {\n      const fn = target[`mqtt_${pkt.type_obj.type}`];\n      if (undefined !== fn) {\n        await fn.call(target, pkt);}\n      else {\n        await target.mqtt_pkt(pkt);} } })()) };\n\n\n\nfunction _mqtt_client_dispatch(client, target) {\n  if (null == target) {\n    target = client;}\n  else if ('function' === typeof target) {\n    target = {mqtt_pkt: target};}\n\n\n  const hashbelt = [new Map()];\n  let _hb_key, _pkt_id=100;\n  const _deferred_by_key = (...args) =>\n    hashbelt[0].set(_hb_key, args);\n\n  const _disp_ ={\n    __proto__: _mqtt_client_cmdid_dispatch\n  , target, hashbelt,\n\n    future(pkt_or_key) {\n      if ('string' === typeof pkt_or_key) {\n        _hb_key = pkt_or_key;}\n      else {\n        _pkt_id = (_pkt_id + 1) & 0xffff;\n        _hb_key = pkt_or_key.pkt_id = _pkt_id;}\n\n      return new Promise(_deferred_by_key)} };\n\n  client._on_mqtt = _disp_.on_mqtt;\n  return _disp_}\n\nfunction _mqtt_web_api(mqtt_session) {\n  return {\n    async with_websock(websock) {\n      if (null == websock) {\n        websock = 'ws://127.0.0.1:9001';}\n\n      if ('string' === typeof websock) {\n        websock = new WebSocket(websock, ['mqtt']);}\n\n      const {readyState} = websock;\n      if (1 !== readyState) {\n        if (0 !== readyState) {\n          throw new Error('Invalid WebSocket readyState') }\n\n        await new Promise(y =>\n          websock.addEventListener('open', y, {once: true}) ); }\n\n\n      const {_conn_} = this;\n      const on_mqtt_chunk = _conn_.set(\n        mqtt_session\n      , u8_pkt => websock.send(u8_pkt) );\n\n      websock.addEventListener('close',\n        _conn_.reset, {once: true});\n\n      websock.onmessage = (async ({ data }) => {\n        const u8_buf = new Uint8Array(\n          data instanceof ArrayBuffer ? data\n            : await data.arrayBuffer());\n\n        on_mqtt_chunk(u8_buf); });\n\n      return this} } }\n\nvar web = MQTTClient.with_api(\n  _mqtt_web_api(mqtt_session));\n\nexport default web;\n//# sourceMappingURL=web.mjs.map\n","//import MQTTClient from 'u8-mqtt-packet/esm/client/web.mjs'\nimport MQTTClient from 'u8-mqtt-packet/esm/tiny/web.mjs'\n\n::!>\n  const c = new MQTTClient @\\ pkt ::\n    const {type_obj, u8_body, b0, cmd, ... tip} = pkt\n    console.log @ `%c[mqtt ${type_obj.type}]: %o`, 'color: blue', tip\n\n  c.with_websock('ws://127.0.0.1:9001')\n\n  await c.connect @:\n    connect_flags: @{}\n      will_flag: 1\n      will_qos: 0\n\n    keep_alive: 60\n\n    payload: @{}\n      client_id: 'swh_demo'\n      will_topic: 'swh/aaa/awesome'\n      will_payload: 'will is awesome'\n\n  await delay(10)\n\n  await c.publish @:\n    topic: 'swh/test-topic'\n    payload: 'awesome from web'\n\n  await delay(10)\n\n  await c.disconnect()\n\nfunction delay(ms) ::\n  return @{} then(y) :: setTimeout(y,ms)\n\n"],"names":["encode_varint","n","a","ni","push","decode_varint","u8","vi","vi_tuple","mqtt_cmd_by_type","mqtt_type_entries","entries","type_map","Map","id","type","cmd","set","get","bind","Array","from","values","_mqtt_raw_pkt_decode_v","u8_ref","_pkt_ctx_","len_body","len_vh","len_pkt","byteLength","b0","subarray","__proto__","hdr","type_obj","u8_body","_mqtt_raw_pkt_dispatch","u8_pkt_dispatch","l","Uint8Array","_base_","u8_buf","b","alen","r","_u8_join","res","u8_pkt","undefined","mqtt_props_by_id","mqtt_props_entries","prop_map","name","plural","prop_obj","mqtt_type_reader","[object Object]","buf","idx","this","step","width","i","len","i0","TextDecoder","decode","bin","utf8","FlagsType","fn_reason","end_part","prop_entries","rdr","mqtt_reader","has_more","value","U8_Reason","Number","reason","super","bind_reason_lookup","reason_entries","reason_map","_connack_flags_","session_present","_connack_reason_","_suback_reason_","pack_u16","v","mqtt_type_writer","Object","assign","_pkt_writer","pack_u32","TextEncoder","encode","length","_u16_bin","k","enc_flags","isNaN","prototype","_pool_","self","rope","pkt","header","vec","_mqtt_pkt_rope","mqtt_pkt_writer","pop","mqtt_pkt_writer_pool","_c_mqtt_proto","_enc_connect_flags","flags","reserved","will_qos","clean_start","will_flag","will_retain","password","username","_enc_subscribe_flags","opts","qos","retain","retain_handling","ops_by_id","fill","disp_parser","enc_by_type","connect_flags","u8_flags","u8_reason","mqtt_level","props","dup","Boolean","topic","pkt_id","u16","payload","flush","_ack_reason_","answers","_mqtt_decode_suback","mqtt_session","mqtt_decode_session","mqtt_encode_session","_bind_mqtt_session","fn_disp","call","connect","wrt","keep_alive","client_id","will_properties","will_topic","will_payload","as_pkt","disconnect","publish","subscribe","each","topics","isArray","MQTTClient","target","_conn_","_transport","_disp_","_dispatch","_disp_send","_send","key","future","api","client","q","then","y","notify","fn","splice","send0","is_live","send_u8_pkt","mqtt_decode","mqtt_encode","send_pkt","_on_mqtt","mqtt_pkt","hashbelt","_hb_key","_pkt_id","_deferred_by_key","args","_mqtt_client_cmdid_dispatch","pkt_or_key","Promise","on_mqtt","cmdids","rotate","td","ts","Date","now","pkt_list","rotate_belt","map","entry","delete","unshift","old","by_evt","by_type","by_id","disp","resolve","async","web","with_api","websock","WebSocket","readyState","Error","addEventListener","once","on_mqtt_chunk","send","reset","onmessage","data","ArrayBuffer","arrayBuffer","_mqtt_web_api","setTimeout","console","c"],"mappings":"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"}