import { _mqtt_raw_pkt_dispatch } from './framing.jsy'


export const _mqtt_pkt_id_dispatch = disp_parser =>
  _mqtt_raw_pkt_dispatch @\ pkt ::
    const fn_disp = disp_parser[pkt.type_obj.id]
    return undefined !== fn_disp
      ? fn_disp.call(disp_parser, pkt)
      : disp_parser[0](pkt)


export const _mqtt_bind_encode = enc_by_type =>
  @\ mqtt_level ::
    mqtt_level = +mqtt_level || mqtt_level.mqtt_level
    return @\ type, pkt =>
      enc_by_type[type] @ mqtt_level, pkt


export const _bind_mqtt_session =
  (sess_decode, sess_encode, _pkt_ctx_) =>
    @:: let x = {__proto__: _pkt_ctx_}
        x._base_ = x
        return @[]
          sess_decode(x)
          sess_encode(x)

