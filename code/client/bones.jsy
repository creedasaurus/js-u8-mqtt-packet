import {_mqtt_client_conn} from './_conn.jsy'
export * from './_conn.jsy'

export class MQTTBonesClient ::
  constructor(_on_mqtt) ::
    this._conn_ = _mqtt_client_conn(this)
    if _on_mqtt ::
      this._on_mqtt = _on_mqtt
      this._on_mqtt([], this)

  auth(pkt) :: return this._send('auth', pkt)
  connect(pkt) :: return this._send('connect', pkt)
  disconnect(pkt) :: return this._send('disconnect', pkt)

  subscribe(pkt) :: return this._send('subscribe', pkt)
  unsubscribe(pkt) :: return this._send('unsubscribe', pkt)

  publish(pkt) :: return this._send('publish', pkt)

  _on_mqtt(pkt_list, self) ::
  // _send(type, pkt) -- provided by _conn_ and transport

  static with(mqtt_session) ::
    this.prototype.mqtt_session = mqtt_session
    return this

