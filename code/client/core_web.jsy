export {MQTTClient} from './core.jsy'

export function _mqtt_web_api(mqtt_session) ::
  return @{}
    async with_websock(websock) ::
      if 'string' === typeof websock ::
        websock = new WebSocket(websock, ['mqtt'])

      const {readyState} = websock
      if 1 !== readyState ::
        if 0 !== readyState ::
          throw new Error @ 'Invalid WebSocket readyState'

        await new Promise @ y =>
          websock.addEventListener @ 'open', y, {once: true}


      const {_conn_} = this
      const on_mqtt_chunk = _conn_.set @
        mqtt_session
        u8_pkt => websock.send @ u8_pkt

      websock.addEventListener @ 'close',
        _conn_.reset, {once: true}

      websock.onmessage = @\: data ::>
        const u8_buf = new Uint8Array @
          data instanceof ArrayBuffer ? data
            : await data.arrayBuffer()

        on_mqtt_chunk @ u8_buf

      return this

