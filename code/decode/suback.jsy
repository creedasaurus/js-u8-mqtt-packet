import {mqtt_type_reader, bind_reason_lookup} from './_utils.jsy'

export const _suback_reason_ = bind_reason_lookup @#
  // MQTT 3.1.1
  @[] 0x00, 'Granted QoS 0'
  @[] 0x01, 'Granted QoS 1'
  @[] 0x02, 'Granted QoS 2'

  // MQTT 5.0
  @[] 0x80, 'Unspecified error'
  @[] 0x83, 'Implementation specific error'
  @[] 0x87, 'Not authorized'
  @[] 0x8F, 'Topic Filter invalid'
  @[] 0x91, 'Packet Identifier in use'
  @[] 0x97, 'Quota exceeded'
  @[] 0x9E, 'Shared Subscriptions not supported'
  @[] 0xA1, 'Subscription Identifiers not supported'
  @[] 0xA2, 'Wildcard Subscriptions not supported'


export function mqtt_decode_suback(pkt) ::
  const rdr = new mqtt_type_reader(pkt.u8_body, 0)

  pkt.packet_id = rdr.u16()
  if 5 <= pkt.mqtt_level ::
    pkt.props = rdr.props()

  const answers = pkt.sub_answers = []
  while rdr.has_more() ::
    answers.push @
      rdr.u8_reason(_suback_reason_)

  return pkt

